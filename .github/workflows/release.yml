# Based on typst's release action:
# https://github.com/typst/typst/blob/main/.github/workflows/release.yml

name: Build Release Binaries
on:
  workflow_dispatch:
  release:
    types: [published]

jobs:
  build-release:
    name: ${{ matrix.release }} ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
        - target: x86_64-pc-windows-msvc
          os: windows-latest
          cross: false
          releaseMode: false
          release: "debug"
        - target: x86_64-unknown-linux-musl
          os: ubuntu-22.04
          cross: true
          releaseMode: false
          release: "debug"
        - target: x86_64-apple-darwin
          os: macos-latest
          cross: false
          releaseMode: false
          release: "debug"
        - target: aarch64-apple-darwin
          os: macos-latest
          cross: false
          releaseMode: false
          release: "debug"
        - target: aarch64-pc-windows-msvc
          os: windows-latest
          cross: false
          releaseMode: false
          release: "debug"
        - target: aarch64-unknown-linux-musl
          os: ubuntu-22.04
          cross: true
          releaseMode: false
          release: "debug"
        - target: armv7-unknown-linux-musleabi
          os: ubuntu-22.04
          cross: true
          releaseMode: false
          release: "debug"
        - target: riscv64gc-unknown-linux-gnu
          os: ubuntu-22.04
          cross: true
          releaseMode: false
          release: "debug"

        - target: x86_64-pc-windows-msvc
          os: windows-latest
          cross: false
          releaseMode: true
          release: "release"
        - target: x86_64-unknown-linux-musl
          os: ubuntu-22.04
          cross: true
          releaseMode: true
          release: "release"
        - target: x86_64-apple-darwin
          os: macos-latest
          cross: false
          releaseMode: true
          release: "release"
        - target: aarch64-apple-darwin
          os: macos-latest
          cross: false
          releaseMode: true
          release: "release"
        - target: aarch64-pc-windows-msvc
          os: windows-latest
          cross: false
          releaseMode: true
          release: "release"
        - target: aarch64-unknown-linux-musl
          os: ubuntu-22.04
          cross: true
          releaseMode: true
          release: "release"
        - target: armv7-unknown-linux-musleabi
          os: ubuntu-22.04
          cross: true
          releaseMode: true
          release: "release"
        - target: riscv64gc-unknown-linux-gnu
          os: ubuntu-22.04
          cross: true
          releaseMode: true
          release: "release"

    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@stable
      with:
        target: ${{ matrix.target }}

    - name: Install Cross
      if: ${{ matrix.cross }}
      run:
        cargo install cross --git https://github.com/cross-rs/cross.git

    - name: Run Cross Release
      if: ${{ matrix.cross && matrix.releaseMode }}
      run:
        cross build -p canvas_syncer --release --target ${{ matrix.target }} -v 
    - name: Run Cross Debug
      if: ${{ matrix.cross && !matrix.releaseMode }}
      run:
        cross build -p canvas_syncer --target ${{ matrix.target }} -v 
    - name: Run Cargo  Release
      if: ${{ !matrix.cross  && matrix.releaseMode }}
      run: cargo build -p canvas_syncer  --release --target ${{ matrix.target }} 
    - name: Run Cargo Debug
      if: ${{ !matrix.cross && !matrix.releaseMode }}
      run: cargo build -p canvas_syncer --target ${{ matrix.target }}

    - name: create artifact directory
      shell: bash
      run: |
        directory=canvas_syncer-${{ matrix.target }}
        mkdir $directory
        cp README LICENSE config.json.example $directory
        if [ -f target/${{ matrix.target }}/${{matrix.release}}/canvas_syncer.exe ]; then
          cp target/${{ matrix.target }}/${{matrix.release}}/canvas_syncer.exe $directory/canvas_syncer-${{matrix.release}}.exe
          7z a -r $directory.zip $directory
        else
          cp target/${{ matrix.target }}/${{matrix.release}}/canvas_syncer $directory/canvas_syncer-${{matrix.release}}
          tar cJf $directory.tar.xz $directory
        fi

    - uses: actions/upload-artifact@v4
      if: github.event_name == 'workflow_dispatch'
      with:
        name: canvas_syncer-${{ matrix.target }}-${{matrix.release}}
        path: "canvas_syncer-${{ matrix.target }}-${{matrix.release}}.*"
        retention-days: 3

    - uses: ncipollo/release-action@v1.14.0
      if: github.event_name == 'release'
      with:
        artifacts: "canvas_syncer-${{ matrix.target }}-${{matrix.release}}.*"
        allowUpdates: true
        omitNameDuringUpdate: true
        omitBodyDuringUpdate: true
